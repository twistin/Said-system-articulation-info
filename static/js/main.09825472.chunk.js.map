{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","createElement","className","id","title","description","image","imageAlt","icons","quote","map","section","key","src","alt","icon","index","aria-hidden","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAwFeA,MAjFf,WAiDE,OACEC,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,UAAQC,UAAU,sBAChBF,IAAAC,cAAA,UAAI,+CACJD,IAAAC,cAAA,KAAGC,UAAU,YAAW,mDAG1BF,IAAAC,cAAA,QAAMC,UAAU,uBAvDH,CACf,CACEC,GAAI,EACJC,MAAO,iCACPC,YAAa,wIACbC,MAAO,sBACPC,SAAU,qDACVC,MAAO,CAAC,QAAS,UAAW,SAC5BC,MAAO,uDAET,CACEN,GAAI,EACJC,MAAO,sBACPC,YAAa,qGACbC,MAAO,8BACPC,SAAU,wDACVC,MAAO,CAAC,QAAS,gBAAiB,aAClCC,MAAO,oDAET,CACEN,GAAI,EACJC,MAAO,4BACPC,YAAa,qHACbC,MAAO,2BACPC,SAAU,gEACVC,MAAO,CAAC,SAAU,SAAU,QAC5BC,MAAO,gDAET,CACEN,GAAI,EACJC,MAAO,0BACPC,YAAa,kHACbC,MAAO,2BACPC,SAAU,iFACVC,MAAO,CAAC,OAAQ,aAAc,QAAS,SACvCC,MAAO,+DAET,CACEN,GAAI,EACJC,MAAO,yBACPC,YAAa,mHACbC,MAAO,2BACPC,SAAU,wDACVC,MAAO,CAAC,SAAU,UAAW,QAC7BC,MAAO,wDAYKC,IAAKC,GACbX,IAAAC,cAAA,WAASW,IAAKD,EAAQR,GAAID,UAAU,uBAClCF,IAAAC,cAAA,MAAIC,UAAU,iBAAiBS,EAAQP,OACvCJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKY,IAAKF,EAAQL,MAAOQ,IAAKH,EAAQJ,YAExCP,IAAAC,cAAA,KAAGC,UAAU,uBAAuBS,EAAQN,aAC5CL,IAAAC,cAAA,OAAKC,UAAU,iBACZS,EAAQH,MAAME,IAAI,CAACK,EAAMC,IACxBhB,IAAAC,cAAA,KAAGW,IAAKI,EAAOd,oBAAqBa,IAAQE,cAAY,WAG5DjB,IAAAC,cAAA,cAAYC,UAAU,iBAAiBS,EAAQF,UAKrDT,IAAAC,cAAA,UAAQC,UAAU,sBAChBF,IAAAC,cAAA,SAAG,2CCtEIiB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACF,EAAG,QAORmB","file":"static/js/main.09825472.chunk.js","sourcesContent":["\n\n// comentario\n\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  const sections = [\n    {\n      id: 1,\n      title: 'Centros de Poder y Difusión',\n      description: 'Los centros metropolitanos crean y difunden narrativas globales a través de fábricas intelectuales y medios de comunicación.',\n      image: 'power_diffusion.png', // AI-generated image placeholder\n      imageAlt: 'Mapa del mundo con los centros de poder resaltados',\n      icons: ['globe', 'factory', 'media'], // FontAwesome icon names (or similar)\n      quote: '\"Cita de Edward Said acerca de los centro de poder\"'\n    },\n    {\n      id: 2,\n      title: 'Fabricando Consenso',\n      description: 'Las \\'fábricas intelectuales\\' transforman información en narrativas que resuenan globalmente.',\n      image: 'consensus_manufacturing.png', // AI-generated image placeholder\n      imageAlt: 'Embudo que convierte la información en narraciones',\n      icons: ['brain', 'assembly-line', 'megaphone'], // FontAwesome icon names\n      quote: '\"Cita de Said sobre el consentimiento fabricado\"'\n    },\n    {\n      id: 3,\n      title: 'Campo de Batalla Cultural',\n      description: 'Las comunidades locales enfrentan las narrativas globales de dos maneras: subordinación o resistencia creativa.',\n      image: 'cultural_battlefield.png', // AI-generated image placeholder\n      imageAlt: 'Intersección de narrativas globales y experiencias locales',\n      icons: ['people', 'shield', 'flag'], // FontAwesome icon names\n      quote: '\"Cita de Said sobre la resistencia cultural\"'\n    },\n    {\n      id: 4,\n      title: 'Reclamando la Narrativa',\n      description: 'La resistencia se manifiesta en la creación de contra-narrativas que desafían las definiciones impuestas.',\n      image: 'reclaiming_narrative.png', // AI-generated image placeholder\n      imageAlt: 'Árbol que representa experiencias locales que dan lugar a nuevas narrativas',\n      icons: ['book', 'microphone', 'brush', 'music'], // FontAwesome icon names\n      quote: '\"Cita de Said sobre la reivindicación de las narrativas\"'\n    },\n    {\n      id: 5,\n      title: 'Navegando el Laberinto',\n      description: 'Los intelectuales deben analizar críticamente el sistema de articulación y empoderar las voces marginadas.',\n      image: '/navegando_laberinto.png', // AI-generated image placeholder\n      imageAlt: 'Persona navegando por un laberinto con una brújula',\n      icons: ['search', 'balance', 'book'], // FontAwesome icon names\n      quote: '\"Cita de Said sobre la responsabilidad intelectual\"'\n    }\n  ];\n\n  return (\n    <div className=\"infographic-container\">\n      <header className=\"infographic-header\">\n        <h1>Figuras, Configuraciones, Transfiguraciones</h1>\n        <p className=\"subtitle\">Navegando el Sistema de Articulación Global</p>\n      </header>\n\n      <main className=\"infographic-content\">\n        {sections.map((section) => (\n          <section key={section.id} className=\"infographic-section\">\n            <h2 className=\"section-title\">{section.title}</h2>\n            <div className=\"section-image\">\n              <img src={section.image} alt={section.imageAlt} />\n            </div>\n            <p className=\"section-description\">{section.description}</p>\n            <div className=\"section-icons\">\n              {section.icons.map((icon, index) => (\n                <i key={index} className={`fas fa-${icon}`} aria-hidden=\"true\"></i> // Example using FontAwesome\n              ))}\n            </div>\n            <blockquote className=\"section-quote\">{section.quote}</blockquote>\n          </section>\n        ))}\n      </main>\n\n      <footer className=\"infographic-footer\">\n        <p>&copy; 2024 Said's Articulation System</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}